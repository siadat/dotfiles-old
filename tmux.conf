set -g prefix M-a
unbind C-b
bind M-a send-prefix
set-option -g default-shell "/bin/zsh"
set-option -g base-index 1
set-option -g pane-base-index 1

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

set-option escape-time 0

setw -g mode-keys vi
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g default-terminal 'screen-256color'

# new pane by split-window:
bind-key -n M-s split-window -h -c "#{pane_current_path}"
bind-key -n M-v split-window -v -c "#{pane_current_path}"

# rotate panes inside window:
bind-key -n M-r rotate-window

# goto copy mode
bind-key -n M-c copy-mode
#bind-key -n M-p paste

# page up/down:
bind-key -n 'M--' copy-mode \; send-keys C-u
bind-key -n 'M-=' copy-mode \; send-keys C-d

set-option -g xterm-keys on
# bind-key -n 'M-[' move-pane -h
# bind-key -n 'M-]' move-pane -h
bind-key -n M-S-Tab previous-window
bind-key -n M-Tab next-window
bind-key -n M-l select-window -t +1
bind-key -n M-h select-window -t -1
bind-key -n M-H swap-window -t -1
bind-key -n M-L swap-window -t +1

bind-key -n 'M-/' copy-mode \; send-keys /

# For developing lash as a tmux feature:
# bind-key -n 'M-d' display-pane -l 5
bind-key -n 'M-w' find-window ''
bind-key -n 'M-w' find-window ''

bind-key -n M-Enter resize-pane -Z
bind-key l next-window
bind-key h previous-window

# toggle between current/previous window:
# bind-key -n M-Tab select-window -l

# select left, right, up or down pane:
bind-key -n M-right select-pane -R
bind-key -n M-left select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U

# resize pane
#bind-key -n M-L resize-pane -R 5
#bind-key -n M-H resize-pane -L 5
bind-key -n M-J resize-pane -D 2
bind-key -n M-K resize-pane -U 5

# select window:
bind-key -n M-` select-window -t :0
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :10

# new window:
bind-key -n M-~ new-window -t :0
bind-key -n M-! new-window -t :1
bind-key -n M-@ new-window -t :2
bind-key -n 'M-#' new-window -t :3
bind-key -n 'M-$' new-window -t :4
bind-key -n M-% new-window -t :5
bind-key -n M-^ new-window -t :6
bind-key -n M-& new-window -t :7
bind-key -n M-* new-window -t :8
bind-key -n M-( new-window -t :9
bind-key -n M-) new-window -t :10

bind-key -n M-Space new-window

# command-prompt:
bind-key -n M-\; command-prompt

set-option -g status on
set-option -g status-interval 20
set-option -g status-utf8 on
set-option -g status-justify "left"
set-option -g status-left-length 90
set-option -g status-right-length 90
set-option -g status-bg default
set-option -g status-fg blue
set-option -g status-keys emacs
set-option -g status-left-style fg=default
set-option -g status-left ''
# set-option -g status-right "#(ruby ~/programming/ruby/clock.rb)"
set-window-option -g window-status-format ' #W '
set-window-option -g window-status-current-format ' #W '
set-window-option -g window-status-style fg=default,bg=black # green,bold
set-window-option -g window-status-current-style fg=yellow,bold,bg=blue # green,bold
set-window-option -g window-status-bell-style fg=default,bg=default
set-window-option -g window-status-separator ' '
set -g mode-mouse off
set -g mouse-resize-pane off
set -g mouse-select-pane off
set -g pane-active-border-bg black
set -g pane-active-border-fg black
set -g pane-border-fg black
set -g pane-border-bg black
set -g wrap-search off
